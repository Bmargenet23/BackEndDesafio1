{{!-- realTimeProducts.handlebars --}}
{{#layout 'layouts/main'}}
    <h1>Productos en tiempo real</h1>
    <ul>
        {{#each products}}
            <li>
                <h2>{{title}}</h2>
                <p>{{description}}</p>
                <p>Precio: ${{price}}</p>
                <p>Stock: {{stock}}</p>
            </li>
        {{/each}}
    </ul>

    <form id="addProductForm">
        <label for="title">Título:</label>
        <input type="text" id="title" name="title" required>
        <br>
        <label for="description">Descripción:</label>
        <textarea id="description" name="description" required></textarea>
        <br>
        <label for="price">Precio:</label>
        <input type="number" id="price" name="price" required>
        <br>
        <label for="stock">Stock:</label>
        <input type="number" id="stock" name="stock" required>
        <br>
        <button type="submit">Agregar Producto</button>
    </form>

    <form id="deleteProductForm">
        <label for="productId">ID del Producto a Eliminar:</label>
        <input type="number" id="productId" name="productId" required>
        <br>
        <button type="submit">Eliminar Producto</button>
    </form>

    <script>
        const socket = io();


        socket.on('productAdded', (product) => {

            const productInfo = `
                <li>
                    <h2>${product.title}</h2>
                    <p>${product.description}</p>
                    <p>Precio: $${product.price}</p>
                    <p>Stock: ${product.stock}</p>
                </li>
            `;
            const productList = document.querySelector('ul');
            productList.innerHTML += productInfo;
        });

        socket.on('productDeleted', (productId) => {


            const productItem = document.querySelector(`li[data-id="${productId}"]`);
            if (productItem) {
                productItem.remove();
            }
        });



        const addProductForm = document.getElementById('addProductForm');
        addProductForm.addEventListener('submit', (event) => {
            event.preventDefault();
            const formData = new FormData(addProductForm);
            const productData = Object.fromEntries(formData);
            socket.emit('addProduct', productData);
            addProductForm.reset();
        });



        const deleteProductForm = document.getElementById('deleteProductForm');
        deleteProductForm.addEventListener('submit', (event) => {
            event.preventDefault();
            const productId = deleteProductForm.elements.productId.value;
            socket.emit('deleteProduct', productId);
            deleteProductForm.reset();
        });
    </script>
{{/layout}}
